openapi: 3.0.3
info:
  title: Sharedo Core API
  description: |
    API specification for Sharedo Core functionality.
    Generated from Nancy module analysis of Sharedo platform v7.8.2.
    
    This API provides endpoints for managing core operations within the Sharedo platform.
  version: 7.8.2
  contact:
    name: Sharedo Support
    url: https://www.sharedo.com

servers:
  - url: https://api.sharedo.com
    description: Production server
  - url: https://staging-api.sharedo.com
    description: Staging server
  - url: http://localhost:8080
    description: Local development server

security:
  - SharedoAuth: []

paths:
  /{systemName}:
    get:
      tags:
        - Core
      summary: GET {systemName}
      operationId: getDocumentValidate
      parameters:
        - name: systemName
          in: path
          required: true
          schema:
            type: string
          description: systemName parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /approvals/{approvalSystemName}/steps:
    post:
      tags:
        - Core
      summary: POST steps
      operationId: postApprovalsSteps
      parameters:
        - name: approvalSystemName
          in: path
          required: true
          schema:
            type: string
          description: approvalSystemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /approvals/{approvalSystemName}/steps/{stepSystemName}:
    delete:
      tags:
        - Core
      summary: DELETE {stepSystemName}
      operationId: deleteApprovalsSteps
      parameters:
        - name: approvalSystemName
          in: path
          required: true
          schema:
            type: string
          description: approvalSystemName parameter
        - name: stepSystemName
          in: path
          required: true
          schema:
            type: string
          description: stepSystemName parameter
      responses:
        '204':
          description: Resource deleted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      tags:
        - Core
      summary: PUT {stepSystemName}
      operationId: putApprovalsSteps
      parameters:
        - name: approvalSystemName
          in: path
          required: true
          schema:
            type: string
          description: approvalSystemName parameter
        - name: stepSystemName
          in: path
          required: true
          schema:
            type: string
          description: stepSystemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for PUT operation
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /approvals/{approvalSystemName}/steps/order:
    post:
      tags:
        - Core
      summary: POST order
      operationId: postStepsOrder
      parameters:
        - name: approvalSystemName
          in: path
          required: true
          schema:
            type: string
          description: approvalSystemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /approvals/{systemName}:
    put:
      tags:
        - Core
      summary: PUT {systemName}
      operationId: putLS
      parameters:
        - name: systemName
          in: path
          required: true
          schema:
            type: string
          description: systemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for PUT operation
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /approvals/{systemName}/_disable:
    put:
      tags:
        - Core
      summary: PUT _disable
      operationId: putApprovals_Disable
      parameters:
        - name: systemName
          in: path
          required: true
          schema:
            type: string
          description: systemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for PUT operation
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /approvals/{systemName}/_enable:
    put:
      tags:
        - Core
      summary: PUT _enable
      operationId: putApprovals_Enable
      parameters:
        - name: systemName
          in: path
          required: true
          schema:
            type: string
          description: systemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for PUT operation
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /bySystemName/{systemName}:
    get:
      tags:
        - Core
      summary: GET {systemName}
      operationId: getME
      parameters:
        - name: systemName
          in: path
          required: true
          schema:
            type: string
          description: systemName parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /sharedoType/{sharedoTypeSystemName}/:
    get:
      tags:
        - Core
      summary: GET 
      operationId: getPE
      parameters:
        - name: sharedoTypeSystemName
          in: path
          required: true
          schema:
            type: string
          description: sharedoTypeSystemName parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /sharedoType/{sharedoTypeSystemName}/{isAllowed:bool}:
    get:
      tags:
        - Core
      summary: GET {isAllowed:bool}
      operationId: getPE
      parameters:
        - name: sharedoTypeSystemName
          in: path
          required: true
          schema:
            type: string
          description: sharedoTypeSystemName parameter
        - name: isAllowed:bool
          in: path
          required: true
          schema:
            type: string
          description: isAllowed:bool parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /systemPermissions:
    get:
      tags:
        - Core
      summary: GET systemPermissions
      operationId: getNS
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /systemPermissions/permissionSet/:
    post:
      tags:
        - Core
      summary: POST 
      operationId: postSystempermissionsPermissionset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /systemPermissions/permissionSet/byCategory:
    get:
      tags:
        - Core
      summary: GET byCategory
      operationId: getPermissionsetBycategory
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /systemPermissions/permissionSet/checkName:
    post:
      tags:
        - Core
      summary: POST checkName
      operationId: postPermissionsetCheckname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /systemPermissions/permissionSets:
    get:
      tags:
        - Core
      summary: GET permissionSets
      operationId: getSystempermissionsPermissionsets
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  templates/{templateSystemName}/auditevents:
    post:
      tags:
        - Core
      summary: POST auditevents
      operationId: postTemplatesAuditevents
      parameters:
        - name: templateSystemName
          in: path
          required: true
          schema:
            type: string
          description: templateSystemName parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    SharedoAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.sharedo.com/oauth/authorize
          tokenUrl: https://auth.sharedo.com/oauth/token
          scopes:
            read: Read access to resources
            write: Write access to resources
            admin: Administrative access

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string
      required:
        - code
        - message
