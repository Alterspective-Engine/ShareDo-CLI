openapi: 3.0.3
info:
  title: Sharedo Workflow API
  description: |
    API specification for Sharedo Workflow functionality.
    Generated from Nancy module analysis of Sharedo platform v7.8.2.
    
    This API provides endpoints for managing workflow operations within the Sharedo platform.
  version: 7.8.2
  contact:
    name: Sharedo Support
    url: https://www.sharedo.com

servers:
  - url: https://api.sharedo.com
    description: Production server
  - url: https://staging-api.sharedo.com
    description: Staging server
  - url: http://localhost:8080
    description: Local development server

security:
  - SharedoAuth: []

paths:
  api/developer/guidance/samplemysitedata/tasks:
    delete:
      tags:
        - Workflow
      summary: DELETE tasks
      operationId: deleteSamplemysitedataTasks
      responses:
        '204':
          description: Resource deleted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      tags:
        - Workflow
      summary: GET tasks
      operationId: getSamplemysitedataTasks
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - Workflow
      summary: POST tasks
      operationId: postSamplemysitedataTasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  api/developer/guidance/samplemysitedata/tasks/{filterName}:
    get:
      tags:
        - Workflow
      summary: GET {filterName}
      operationId: getSamplemysitedataTasks
      parameters:
        - name: filterName
          in: path
          required: true
          schema:
            type: string
          description: filterName parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  api/developer/guidance/samplemysitedata/tasks/{id}:
    delete:
      tags:
        - Workflow
      summary: DELETE {id}
      operationId: deleteSamplemysitedataTasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: id parameter
      responses:
        '204':
          description: Resource deleted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  api/developer/guidance/samplemysitedata/tasks/bulk:
    delete:
      tags:
        - Workflow
      summary: DELETE bulk
      operationId: deleteTasksBulk
      responses:
        '204':
          description: Resource deleted successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  api/developer/guidance/samplemysitedata/tasks/counts:
    get:
      tags:
        - Workflow
      summary: GET counts
      operationId: getTasksCounts
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  api/developer/guidance/samplemysitedata/tasks/radar:
    get:
      tags:
        - Workflow
      summary: GET radar
      operationId: getTasksRadar
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  api/developer/guidance/samplemysitedata/tasks/randomTasks/{count}:
    post:
      tags:
        - Workflow
      summary: POST {count}
      operationId: postTasksRandomtasks
      parameters:
        - name: count
          in: path
          required: true
          schema:
            type: string
          description: count parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  tasks/:
    post:
      tags:
        - Workflow
      summary: POST 
      operationId: postKS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  tasks/{taskId:guid}:
    get:
      tags:
        - Workflow
      summary: GET {taskId:guid}
      operationId: getKS
      parameters:
        - name: taskId:guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: taskId:guid parameter
      responses:
        '200':
          description: Operation completed successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  tasks/{taskId:guid}/patch:
    post:
      tags:
        - Workflow
      summary: POST patch
      operationId: postTasksPatch
      parameters:
        - name: taskId:guid
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: taskId:guid parameter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Request data for POST operation
      responses:
        '201':
          description: Resource created successfully
          content:
            application/json:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    SharedoAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.sharedo.com/oauth/authorize
          tokenUrl: https://auth.sharedo.com/oauth/token
          scopes:
            read: Read access to resources
            write: Write access to resources
            admin: Administrative access

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: string
      required:
        - code
        - message
