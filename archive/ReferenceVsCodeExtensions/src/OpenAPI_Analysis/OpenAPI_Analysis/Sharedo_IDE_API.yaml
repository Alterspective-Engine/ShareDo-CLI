openapi: 3.0.3
info:
  title: Sharedo IDE API
  description: Integrated Development Environment API for code editing, file management, and development tools in Sharedo platform
  version: 1.0.0
  contact:
    name: Sharedo Platform
    url: https://sharedo.com
servers:
  - url: https://api.sharedo.com
    description: Production server
  - url: https://dev-api.sharedo.com
    description: Development server

paths:
  /api/ide:
    get:
      summary: Get IDE root structure
      description: Retrieve the root structure of the IDE workspace
      tags:
        - IDE Structure
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  workspace:
                    $ref: '#/components/schemas/Workspace'
                  recentFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'

  /api/ide/{nodeId}:
    get:
      summary: Get node details
      description: Retrieve details of a specific node (file or folder) in the IDE
      tags:
        - IDE Structure
      parameters:
        - name: nodeId
          in: path
          required: true
          description: The unique identifier of the node
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        '404':
          description: Node not found
    delete:
      summary: Delete node
      description: Delete a file or folder from the IDE workspace
      tags:
        - IDE Structure
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Node deleted successfully
        '404':
          description: Node not found
        '400':
          description: Cannot delete node (may have dependencies)

  /api/ide/{nodeId}/{newName}/_:
    put:
      summary: Rename node
      description: Rename a file or folder in the IDE workspace
      tags:
        - IDE Structure
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
        - name: newName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Node renamed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
        '404':
          description: Node not found
        '400':
          description: Invalid name or name conflict

  /api/ide/file:
    post:
      summary: Create new file
      description: Create a new file in the IDE workspace
      tags:
        - File Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - parentId
              properties:
                name:
                  type: string
                  description: File name
                parentId:
                  type: string
                  description: Parent folder ID
                content:
                  type: string
                  description: Initial file content
                template:
                  type: string
                  description: Template to use for file creation
      responses:
        '201':
          description: File created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '400':
          description: Invalid request
        '409':
          description: File already exists

  /api/ide/file/{fileId}:
    get:
      summary: Get file content
      description: Retrieve the content of a specific file
      tags:
        - File Management
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                description: File content
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                  encoding:
                    type: string
                  mimeType:
                    type: string
        '404':
          description: File not found
    put:
      summary: Update file content
      description: Update the content of an existing file
      tags:
        - File Management
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                encoding:
                  type: string
      responses:
        '200':
          description: File updated successfully
        '404':
          description: File not found
        '400':
          description: Invalid content

  /api/ide/folder/{name}/_:
    put:
      summary: Create new folder
      description: Create a new folder in the IDE workspace
      tags:
        - Folder Management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parentId:
                  type: string
                  description: Parent folder ID (root if not specified)
      responses:
        '201':
          description: Folder created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderInfo'
        '400':
          description: Invalid request
        '409':
          description: Folder already exists

  /api/ide/template/{templateId}/{folderName}:
    post:
      summary: Apply template
      description: Apply a template to create files and folder structure
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: object
                  description: Template parameters
                targetFolder:
                  type: string
                  description: Target folder ID
      responses:
        '201':
          description: Template applied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  createdFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'
                  createdFolders:
                    type: array
                    items:
                      $ref: '#/components/schemas/FolderInfo'
        '404':
          description: Template not found

  /api/ide/upload:
    post:
      summary: Upload files
      description: Upload one or more files to the IDE workspace
      tags:
        - File Management
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                parentId:
                  type: string
                  description: Target folder ID
                overwrite:
                  type: boolean
                  description: Whether to overwrite existing files
      responses:
        '201':
          description: Files uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  uploadedFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        error:
                          type: string
        '400':
          description: Invalid upload request

  /api/ide/unzip/{nodeId}:
    post:
      summary: Extract archive
      description: Extract a ZIP archive in the IDE workspace
      tags:
        - File Management
      parameters:
        - name: nodeId
          in: path
          required: true
          schema:
            type: string
          description: ID of the ZIP file to extract
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                targetFolder:
                  type: string
                  description: Target folder for extraction
                overwrite:
                  type: boolean
                  description: Whether to overwrite existing files
      responses:
        '200':
          description: Archive extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  extractedFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileInfo'
        '404':
          description: ZIP file not found
        '400':
          description: Invalid archive or extraction failed

  /api/ide/widgets:
    get:
      summary: Get IDE widgets
      description: Retrieve available widgets for the IDE interface
      tags:
        - IDE Configuration
      parameters:
        - name: all
          in: query
          description: Include all widgets regardless of permissions
          schema:
            type: boolean
            default: false
        - name: allowInPortalDesigner
          in: query
          description: Filter widgets suitable for portal designer
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Widget'

components:
  schemas:
    Workspace:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        rootFolder:
          $ref: '#/components/schemas/FolderInfo'
        settings:
          type: object
        permissions:
          type: object

    Node:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [file, folder]
        parentId:
          type: string
        path:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        size:
          type: integer
        permissions:
          type: object

    FileInfo:
      allOf:
        - $ref: '#/components/schemas/Node'
        - type: object
          properties:
            mimeType:
              type: string
            encoding:
              type: string
            language:
              type: string
              description: Programming language detected
            isReadOnly:
              type: boolean

    FolderInfo:
      allOf:
        - $ref: '#/components/schemas/Node'
        - type: object
          properties:
            children:
              type: array
              items:
                $ref: '#/components/schemas/Node'
            isExpanded:
              type: boolean

    Widget:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        icon:
          type: string
        configuration:
          type: object
        permissions:
          type: array
          items:
            type: string
        allowInPortalDesigner:
          type: boolean

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

tags:
  - name: IDE Structure
    description: IDE workspace structure operations
  - name: File Management
    description: File creation, editing, and management
  - name: Folder Management
    description: Folder creation and organization
  - name: Templates
    description: Code and project templates
  - name: IDE Configuration
    description: IDE configuration and customization
